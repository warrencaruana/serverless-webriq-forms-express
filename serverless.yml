service: my-express-application

custom:
  WF_Forms_TableName: "wf-forms-table-${self:provider.stage}"
  WF_FormSubmissions_TableName: "wf-submissions-table-${self:provider.stage}"
  WF_FormNonces_TableName: "wf-form_nonces-table-${self:provider.stage}"
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }
        - { "Fn::GetAtt": ["FormsDynamoDBTable", "Arn"] }
        - { "Fn::GetAtt": ["SubmissionsDynamoDBTable", "Arn"] }
  environment:
    FORMS_TABLE: ${self:custom.WF_Forms_TableName}
    FORMNONCES_TABLE: ${self:custom.WF_FormNonces_TableName}
    FORM_SUBMISSIONS_TABLE: ${self:custom.WF_FormSubmissions_TableName}
    APP_URL: https://forms.webriq.com
    APP_DEFAULT_RECAPTCHA_KEY: 6Lc0DGoUAAAAAMVQyBWYOoBPROnXpLoK1vvF_vx8
    APP_DEFAULT_RECAPTCHA_SECRET: 6Lc0DGoUAAAAAEwAwSrku8PZ_eNRb_wtQtENx-S4
    WEBRIQ_FORMS_API_URL_DEV: http://localhost:3000/forms/
    WEBRIQ_FORMS_API_URL:
      {
        "Fn::Join":
          [
            "",
            [
              " https://",
              { "Ref": "ApiGatewayRestApi" },
              ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}/",
            ],
          ],
      }

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

  getFormSubmissions:
    handler: index.handler
    events:
      - http: "GET /forms/{formId}/submissions"
  getFormSubmission:
    handler: index.handler
    events:
      - http: "GET /forms/{formId}/submissions/{proxy+}"
  createFormSubmission:
    handler: index.handler
    events:
      - http: "POST /forms/{formId}/submissions"
  deleteFormSubmission:
    handler: index.handler
    events:
      - http: "DELETE /forms/{formId}/submissions/{proxy+}"

  createForm:
    handler: index.handler
    events:
      - http: "POST /forms"
  getForms:
    handler: index.handler
    events:
      - http: "GET /forms"
  getForm:
    handler: index.handler
    events:
      - http: "GET /forms/{proxy+}"

  updateForm:
    handler: index.handler
    events:
      - http: "PUT /forms/{proxy+}"
  deleteForm:
    handler: index.handler
    events:
      - http: "DELETE /forms/{proxy+}"

  getJSLib:
    handler: index.handler
    events:
      - http: "GET /js/initForms"
  getReactJSLib:
    handler: index.handler
    events:
      - http: "GET /js/initReactForms"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

resources:
  Resources:
    FormsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.WF_Forms_TableName}
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    SubmissionsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.WF_FormSubmissions_TableName}
        AttributeDefinitions:
          - AttributeName: _form
            AttributeType: S
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
          - AttributeName: _form
            KeyType: String
        BillingMode: PAY_PER_REQUEST

    FormNoncesDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.WF_FormNonces_TableName}
        AttributeDefinitions:
          - AttributeName: _id
            AttributeType: S
        KeySchema:
          - AttributeName: _id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
