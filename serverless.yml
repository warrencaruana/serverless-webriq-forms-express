org: dorelljames
service: webriqforms-dev-serverless

custom:
  WebriQ_Forms_TableName: "webriqforms-dev-table-${self:provider.stage}"
  WebriQ_Forms_UserTableName: "webriqforms-dev-users-table-${self:provider.stage}"
  bucket: webriqforms-dev-serverless-bucket
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      migrate: true
  s3:
    port: 8001
    directory: /tmp
  logRetentionInDays:
    prod: 90
    dev: 30

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["WebriQFormsDynamoDBTable", "Arn"] }
        - { "Fn::GetAtt": ["WebriQFormsUsersDynamoDBTable", "Arn"] }
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
  environment:
    WEBRIQ_FORMS_TABLE: ${self:custom.WebriQ_Forms_TableName}
    WEBRIQ_FORMS_USERS_TABLE: ${self:custom.WebriQ_Forms_UserTableName}
    APP_URL: https://forms.webriq.com
    APP_STAGE: ${self:custom.stage}
    APP_REGION: ${self:custom.region}
    APP_DEFAULT_RECAPTCHA_KEY: 6Lc0DGoUAAAAAMVQyBWYOoBPROnXpLoK1vvF_vx8
    APP_DEFAULT_RECAPTCHA_SECRET: 6Lc0DGoUAAAAAEwAwSrku8PZ_eNRb_wtQtENx-S4
    CLOUDINARY_CLOUD_NAME: dokfyxs4e
    CLOUDINARY_API_KEY: 151834162875131
    CLOUDINARY_API_SECRET: 3cxSNFjBmJRNjOrOVBweYgx-ZgQ
    MAILGUN_USER: postmaster@webriqshops.com
    MAILGUN_PASSWORD: 0c7389efd226e9bee418cc83e73b0bfe
    MAILTRAP_USER: 44314661af65a2928
    MAILTRAP_PASSWORD: 093bfd51adeb42
    WEBRIQ_FORMS_API_URL_DEV: http://localhost:3000/forms/
    WEBRIQ_FORMS_API_URL:
      {
        "Fn::Join":
          [
            "",
            [
              " https://",
              { "Ref": "ApiGatewayRestApi" },
              ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}/",
            ],
          ],
      }
    BUCKET: ${self:custom.bucket}
  logRetentionInDays: ${self:custom.logRetentionInDays.${self:custom.stage}}
  apiGateway:
    binaryMediaTypes:
      - "*/*"

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: "ANY {proxy+}"

  jwtTokenTest:
    handler: index.handler
    events:
      - http: "GET /tokentest"

  postLogin:
    handler: index.handler
    events:
      - http: "POST /login"

  getFormSubmissions:
    handler: index.handler
    events:
      - http: "GET /forms/{proxy}/submissions"
  getFormSubmission:
    handler: index.handler
    events:
      - http: "GET /forms/{proxy}/submissions/{id}"
  createFormSubmission:
    handler: index.handler
    events:
      - http: "POST /forms/{proxy}/submissions"
    environment:
      BUCKET: ${self:custom.bucket}
  deleteFormSubmission:
    handler: index.handler
    events:
      - http: "DELETE /forms/{proxy}/submissions/{id}"

  createForm:
    handler: index.handler
    events:
      - http: "POST /forms"
  getForms:
    handler: index.handler
    events:
      - http: "GET /forms"
  getFormByURL:
    handler: index.handler
    events:
      - http: "GET /forms/{proxy}/url"
  getForm:
    handler: index.handler
    events:
      - http: "GET /forms/{proxy}"

  updateForm:
    handler: index.handler
    events:
      - http: "PUT /forms/{proxy}"
  deleteForm:
    handler: index.handler
    events:
      - http: "DELETE /forms/{proxy}"

  getJSLib:
    handler: index.handler
    events:
      - http: "GET /js/initForms"
  getReactJSLib:
    handler: index.handler
    events:
      - http: "GET /js/initReactForms"

plugins:
  - serverless-offline
  - serverless-s3-local
  - serverless-dynamodb-local

resources:
  Resources:
    WebriQFormsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.WebriQ_Forms_TableName}
        AttributeDefinitions:
          - AttributeName: _type
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: N
        KeySchema:
          - AttributeName: _type
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: expiresAt
          Enabled: true
    WebriQFormsUsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.WebriQ_Forms_UserTableName}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    WebriQFormsS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        AccessControl: PublicRead
        CorsConfiguration:
          CorsRules:
            - AllowedMethods:
                - GET
                - HEAD
              AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
